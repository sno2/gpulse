ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 8 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 13, .end = 14 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 16, .end = 19 } } } } } } } ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 29, .end = 36 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 41, .end = 42 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 44, .end = 45 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 49, .end = 50 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 52, .end = 55 } } } } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.Span{ .start = 136, .end = 137 } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.Span{ .start = 148, .end = 149 } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 164, .end = 171 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 173, .end = 180 } }, .value = null } } } } ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 190, .end = 195 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 200, .end = 201 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 203, .end = 204 } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .align = ast.Node{ .number_literal = ast.Span{ .start = 215, .end = 217 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 219, .end = 220 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 222, .end = 225 } } } } } } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.Span{ .start = 280, .end = 281 } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.Span{ .start = 292, .end = 293 } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 308, .end = 313 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 315, .end = 320 } }, .value = null } } } } 