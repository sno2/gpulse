ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .vertex = void } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 11, .end = 20 }, .params = {  }, .ret = ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 35, .end = 43 } } } }, .inner = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 45, .end = 49 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 50, .end = 53 } } } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 66, .end = 70 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 71, .end = 74 } } } } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 76, .end = 79 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 81, .end = 84 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 86, .end = 89 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 91, .end = 94 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .fragment = void } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 113, .end = 122 }, .params = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 132, .end = 140 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 142, .end = 150 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 152, .end = 156 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 157, .end = 160 } } } } } } } } } }, .ret = ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 176, .end = 177 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 179, .end = 183 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 184, .end = 187 } } } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 200, .end = 204 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 205, .end = 208 } } } } }, .args = { ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 210, .end = 218 } }, .op_idx = 218, .rhs = ast.Node{ .identifier = ast.Span{ .start = 219, .end = 220 } } } }, ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 222, .end = 230 } }, .op_idx = 230, .rhs = ast.Node{ .identifier = ast.Span{ .start = 231, .end = 232 } } } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 234, .end = 237 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 239, .end = 242 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .compute = void }, ast.Attribute{ .workgroup_size = ast.WorkgroupSizeAttribute{ .x = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 273, .end = 274 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .y = null, .z = null } } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 279, .end = 288 }, .params = {  }, .ret = null, .scope = {  } } } } }
