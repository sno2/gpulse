ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 3, .end = 9 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 15, .end = 18 } }, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 27, .end = 28 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 30, .end = 33 } }, .value = null } }, ast.Node{ .scope = ast.Scope{ .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 93, .end = 94 } }, .op_idx = 95, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 97, .end = 98 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 136, .end = 137 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 240, .end = 241 } }, .op_idx = 242, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 244, .end = 245 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 429, .end = 430 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
