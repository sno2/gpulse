ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 19 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 24, .end = 25 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 27, .end = 32 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 33, .end = 36 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 37, .end = 38 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 105, .end = 106 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 117, .end = 118 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 133, .end = 140 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 142, .end = 154 } }, .value = null } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 164, .end = 175 }, .members = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .size = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 186, .end = 188 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 190, .end = 194 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 196, .end = 199 } } } } } } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 209, .end = 219 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 224, .end = 225 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 227, .end = 232 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 233, .end = 244 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 245, .end = 246 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 270, .end = 271 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 282, .end = 283 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 298, .end = 303 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 305, .end = 315 } }, .value = null } } } }
