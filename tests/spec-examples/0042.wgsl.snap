ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 21 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 28, .end = 35 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 37, .end = 43 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 44, .end = 47 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 54, .end = 58 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 60, .end = 65 }, .args = { ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 66, .end = 70 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 71, .end = 74 } } } } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 86, .end = 87 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 98, .end = 99 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 114, .end = 117 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.storage, .typ = ast.Node{ .identifier = ast.Span{ .start = 119, .end = 133 } }, .value = null } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 142, .end = 143 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 154, .end = 155 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 161, .end = 162 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 164, .end = 174 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 175, .end = 178 } } } } }, .value = null } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 188, .end = 189 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 200, .end = 201 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 207, .end = 208 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 210, .end = 217 } }, .value = null } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .fragment = void } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 233, .end = 241 }, .params = {  }, .ret = ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 257, .end = 258 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 260, .end = 264 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 265, .end = 268 } } } } } } }, .scope = { ast.Node{ .phony = ast.Phony{ .value = ast.Node{ .ref = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 383, .end = 386 } } } } } }, ast.Node{ .phony = ast.Phony{ .value = ast.Node{ .identifier = ast.Span{ .start = 394, .end = 395 } } } }, ast.Node{ .phony = ast.Phony{ .value = ast.Node{ .identifier = ast.Span{ .start = 403, .end = 404 } } } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 415, .end = 419 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 420, .end = 423 } } } } }, .args = {  } } } } } } } } } }
