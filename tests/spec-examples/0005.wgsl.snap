ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 7 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 10, .end = 12 }, .kind = ast.NumberLiteral.NumberKind.u32 } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 20, .end = 21 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 24, .end = 27 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 35, .end = 36 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 39, .end = 40 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 48, .end = 49 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 52, .end = 54 }, .kind = ast.NumberLiteral.NumberKind.i32 } } } }
