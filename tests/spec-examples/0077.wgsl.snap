ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 8 }, .members = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 23, .end = 24 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 26, .end = 27 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 29, .end = 32 } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 117, .end = 118 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 120, .end = 121 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 123, .end = 126 } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .fragment = void } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 247, .end = 257 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 258, .end = 261 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 263, .end = 264 } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 276, .end = 277 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 279, .end = 282 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 284, .end = 287 } } } } } } }, .ret = ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 302, .end = 303 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 305, .end = 309 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 310, .end = 313 } } } } } } }, .scope = {  } } } } }
