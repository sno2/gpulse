ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 13 }, .members = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 74, .end = 86 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 88, .end = 92 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 95, .end = 99 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 100, .end = 103 } } } } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 178, .end = 200 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 202, .end = 205 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 208, .end = 211 } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .compute = void }, ast.Attribute{ .workgroup_size = ast.WorkgroupSizeAttribute{ .x = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 240, .end = 242 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .y = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 243, .end = 244 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .z = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 245, .end = 246 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 251, .end = 255 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 256, .end = 262 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 265, .end = 271 } } } } }, .ret = null, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .equal = ast.BinaryOp{ .lhs = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 365, .end = 371 } }, .op_idx = 371, .rhs = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 372, .end = 376 } }, .op_idx = 376, .rhs = ast.Node{ .identifier = ast.Span{ .start = 377, .end = 378 } } } } } }, .op_idx = 379, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 382, .end = 383 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .attributes = null, .scope = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 390, .end = 406 } }, .args = {  } } } }, .next = null } } } } } } }
