ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 8 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 85, .end = 86 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 88, .end = 91 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 165, .end = 166 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 168, .end = 171 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 245, .end = 246 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 248, .end = 252 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 253, .end = 256 } } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .size = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 331, .end = 333 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 335, .end = 336 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 338, .end = 341 } } } } } } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 412, .end = 413 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 491, .end = 492 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 494, .end = 498 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 499, .end = 502 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 651, .end = 652 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 654, .end = 658 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 659, .end = 662 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 732, .end = 733 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 735, .end = 738 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 812, .end = 813 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 815, .end = 818 } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .align = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 980, .end = 982 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 984, .end = 985 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 987, .end = 988 } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1054, .end = 1055 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 1057, .end = 1061 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1062, .end = 1065 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1215, .end = 1216 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 1218, .end = 1223 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1224, .end = 1225 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1227, .end = 1228 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1296, .end = 1297 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 1299, .end = 1302 } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1463, .end = 1464 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1475, .end = 1476 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 1491, .end = 1505 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 1507, .end = 1508 } }, .value = null } } } }
