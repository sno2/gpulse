ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 17 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 22, .end = 30 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 33, .end = 38 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 42, .end = 47 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 50, .end = 55 } } } } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 67, .end = 79 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 84, .end = 94 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 97, .end = 100 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 104, .end = 109 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 112, .end = 117 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 118, .end = 128 } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 141, .end = 142 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 153, .end = 154 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 169, .end = 175 }, .access_mode = null, .addr_space = ast.AddrSpace.storage, .typ = ast.Node{ .identifier = ast.Span{ .start = 178, .end = 190 } }, .value = null } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 196, .end = 212 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 218, .end = 221 } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 233, .end = 244 } }, .args = { ast.Node{ .ref = ast.UnaryOp{ .op_idx = 246, .value = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 247, .end = 253 } }, .op_idx = 253, .rhs = ast.Node{ .identifier = ast.Span{ .start = 254, .end = 259 } } } } } } } } } } } } } }
