ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 3, .end = 23 }, .params = {  }, .ret = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 35, .end = 36 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 38, .end = 41 } }, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 44, .end = 45 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .greater_than = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 52, .end = 53 } }, .op_idx = 54, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 56, .end = 57 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .attributes = null, .scope = { ast.Node{ .cont = ast.Span{ .start = 65, .end = 73 } } }, .next = null } } } } }
