ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 50, .end = 58 }, .members = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 73, .end = 74 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 76, .end = 77 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 79, .end = 83 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 84, .end = 87 } } } } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 101, .end = 113 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 115, .end = 116 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 118, .end = 122 } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 136, .end = 137 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .interpolate = ast.InterpolateAttribute{ .first = ast.Node{ .identifier = ast.Span{ .start = 152, .end = 156 } }, .second = null } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 158, .end = 159 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 161, .end = 164 } } } } } } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 175, .end = 184 }, .members = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 198, .end = 208 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 210, .end = 211 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 213, .end = 216 } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .location = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 230, .end = 231 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 233, .end = 234 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 236, .end = 240 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 241, .end = 244 } } } } } } } } } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .fragment = void } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 262, .end = 272 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 273, .end = 276 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 278, .end = 286 } } } } }, .ret = ast.Node{ .identifier = ast.Span{ .start = 291, .end = 300 } }, .scope = {  } } } } }
