ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 8 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 15, .end = 18 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 20, .end = 23 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 29, .end = 35 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 37, .end = 40 } } } } } } }
ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 56, .end = 62 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 64, .end = 65 } }, .value = null } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 204, .end = 205 }, .params = {  }, .ret = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 218, .end = 220 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 222, .end = 226 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 227, .end = 230 } } } } }, .value = null } }, ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 1119, .end = 1121 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 1122, .end = 1123 } } } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1126, .end = 1129 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } }, ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .index = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 1798, .end = 1800 } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1801, .end = 1802 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1806, .end = 1809 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 1820, .end = 1821 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 1823, .end = 1829 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1830, .end = 1833 } } } } }, .value = null } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 2697, .end = 2705 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 2707, .end = 2711 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 2712, .end = 2715 } } } } }, .value = ast.Node{ .index = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 2719, .end = 2720 } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 2721, .end = 2722 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 2734, .end = 2735 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 2737, .end = 2742 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 2743, .end = 2746 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 2747, .end = 2748 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .value = null } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 3529, .end = 3538 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 3540, .end = 3543 } }, .value = ast.Node{ .index = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 3546, .end = 3547 } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 3548, .end = 3549 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 4382, .end = 4395 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 4397, .end = 4400 } }, .value = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 4403, .end = 4409 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 4410, .end = 4416 } } } } } } } } }
