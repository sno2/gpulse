ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 7, .end = 8 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 19, .end = 20 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 26, .end = 27 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 29, .end = 39 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 40, .end = 43 } } } } }, .value = null } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 53, .end = 54 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 65, .end = 66 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 72, .end = 74 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 76, .end = 92 } }, .value = null } } } }
ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 101, .end = 102 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 113, .end = 114 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 120, .end = 121 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 123, .end = 130 } }, .value = null } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 136, .end = 155 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 156, .end = 157 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 159, .end = 163 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 164, .end = 167 } } } } } } } }, .ret = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 173, .end = 177 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 178, .end = 181 } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 194, .end = 207 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 208, .end = 209 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .identifier = ast.Span{ .start = 210, .end = 211 } }, ast.Node{ .identifier = ast.Span{ .start = 212, .end = 213 } }, ast.Node{ .identifier = ast.Span{ .start = 214, .end = 215 } } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 223, .end = 242 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 243, .end = 244 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 246, .end = 250 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 251, .end = 254 } } } } } } } }, .ret = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 260, .end = 264 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 265, .end = 268 } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 281, .end = 294 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 295, .end = 296 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .identifier = ast.Span{ .start = 297, .end = 298 } }, ast.Node{ .identifier = ast.Span{ .start = 299, .end = 300 } }, ast.Node{ .identifier = ast.Span{ .start = 301, .end = 302 } } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 310, .end = 329 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 330, .end = 331 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 333, .end = 337 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 338, .end = 341 } } } } } } } }, .ret = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 347, .end = 351 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 352, .end = 355 } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 368, .end = 381 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 382, .end = 383 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .identifier = ast.Span{ .start = 384, .end = 385 } }, ast.Node{ .identifier = ast.Span{ .start = 386, .end = 387 } }, ast.Node{ .identifier = ast.Span{ .start = 388, .end = 389 } } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 397, .end = 420 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 421, .end = 422 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 424, .end = 428 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 429, .end = 432 } } } } } } } }, .ret = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 438, .end = 442 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 443, .end = 446 } } } } }, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 459, .end = 472 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 473, .end = 475 } }, ast.Node{ .identifier = ast.Span{ .start = 476, .end = 477 } }, ast.Node{ .identifier = ast.Span{ .start = 478, .end = 479 } } } } } } } } } }
