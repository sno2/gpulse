ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 3, .end = 6 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 7, .end = 8 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 11, .end = 14 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 15, .end = 23 } }, ast.Node{ .identifier = ast.Span{ .start = 25, .end = 28 } } } } } } } }, .ret = null, .scope = {  } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 39, .end = 42 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 43, .end = 44 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 47, .end = 50 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 51, .end = 58 } }, ast.Node{ .identifier = ast.Span{ .start = 60, .end = 63 } } } } } } } }, .ret = null, .scope = {  } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 74, .end = 78 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 79, .end = 80 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 83, .end = 86 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 87, .end = 95 } }, ast.Node{ .identifier = ast.Span{ .start = 97, .end = 100 } } } } } } } }, .ret = null, .scope = { ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 111, .end = 112 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 115, .value = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 116, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 117, .value = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 118, .value = ast.Node{ .paren = ast.Node{ .identifier = ast.Span{ .start = 120, .end = 121 } } } } } } } } } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 127, .end = 130 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 131, .end = 132 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 146, .end = 149 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 150, .end = 151 } } } } } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 173, .end = 174 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 179, .end = 180 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 183, .end = 186 } } } } } } }
ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 194, .end = 205 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 208, .end = 211 } }, .value = null } }
ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 217, .end = 230 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 233, .end = 238 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 239, .end = 242 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 244, .end = 245 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .value = null } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 251, .end = 254 }, .params = {  }, .ret = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 265, .end = 276 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 279, .end = 282 } }, .value = null } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 290, .end = 303 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 306, .end = 307 } }, .value = null } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 316, .end = 322 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 325, .value = ast.Node{ .identifier = ast.Span{ .start = 326, .end = 337 } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 345, .end = 351 }, .typ = null, .value = ast.Node{ .identifier = ast.Span{ .start = 354, .end = 360 } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 368, .end = 374 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 377, .value = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 378, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 379, .value = ast.Node{ .identifier = ast.Span{ .start = 380, .end = 391 } } } } } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 399, .end = 405 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 408, .value = ast.Node{ .paren = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 410, .end = 423 } }, .op_idx = 423, .rhs = ast.Node{ .identifier = ast.Span{ .start = 424, .end = 425 } } } } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 434, .end = 440 }, .typ = null, .value = ast.Node{ .identifier = ast.Span{ .start = 443, .end = 449 } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 458, .end = 464 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 467, .value = ast.Node{ .identifier = ast.Span{ .start = 468, .end = 479 } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 487, .end = 493 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 496, .value = ast.Node{ .identifier = ast.Span{ .start = 497, .end = 510 } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 518, .end = 524 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 527, .value = ast.Node{ .index = ast.Index{ .root = ast.Node{ .paren = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 529, .value = ast.Node{ .identifier = ast.Span{ .start = 530, .end = 536 } } } } }, .index = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 538, .end = 539 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 548, .end = 554 }, .typ = null, .value = ast.Node{ .identifier = ast.Span{ .start = 557, .end = 563 } } } }, ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 571, .end = 577 }, .typ = null, .value = ast.Node{ .ref = ast.UnaryOp{ .op_idx = 580, .value = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 581, .value = ast.Node{ .identifier = ast.Span{ .start = 582, .end = 588 } } } } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 593, .end = 596 } }, .args = { ast.Node{ .ref = ast.UnaryOp{ .op_idx = 597, .value = ast.Node{ .identifier = ast.Span{ .start = 598, .end = 609 } } } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 647, .end = 650 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 651, .end = 657 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 713, .end = 716 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 717, .end = 723 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 779, .end = 782 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 783, .end = 789 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 845, .end = 848 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 849, .end = 855 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 903, .end = 906 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 907, .end = 913 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 962, .end = 965 } }, .args = { ast.Node{ .ref = ast.UnaryOp{ .op_idx = 966, .value = ast.Node{ .identifier = ast.Span{ .start = 967, .end = 978 } } } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 1016, .end = 1019 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1020, .end = 1026 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 1074, .end = 1077 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1078, .end = 1084 } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 1132, .end = 1135 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1136, .end = 1142 } } } } } } } }
