ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 3, .end = 4 }, .params = {  }, .ret = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 26, .end = 31 }, .access_mode = null, .addr_space = ast.AddrSpace.function, .typ = ast.Node{ .identifier = ast.Span{ .start = 33, .end = 36 } }, .value = null } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 87, .end = 92 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 94, .end = 97 } }, .value = null } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 168, .end = 171 }, .access_mode = null, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 173, .end = 176 } }, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 179, .end = 182 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 253, .end = 255 }, .access_mode = null, .addr_space = null, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 258, .end = 265 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } } } } }
