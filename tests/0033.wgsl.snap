ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 4, .end = 5 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 7, .end = 10 } }, .value = ast.Node{ .number_literal = ast.Span{ .start = 13, .end = 16 } } } } ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 22, .end = 23 }, .typ = null, .value = ast.Node{ .add = ast.BinaryOp{ .lhs = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 26, .end = 27 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 30, .end = 31 } } } }, .rhs = ast.Node{ .add = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 34, .end = 35 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 38, .end = 39 } } } } } } } } 