ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .compute = void }, ast.Attribute{ .workgroup_size = ast.WorkgroupSizeAttribute{ .x = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 25, .end = 27 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .y = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 28, .end = 29 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .z = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 30, .end = 31 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .inner = ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 36, .end = 40 }, .params = { ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 50, .end = 62 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 64, .end = 68 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 71, .end = 75 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 76, .end = 79 } } } } } } } } }, ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .builtin = ast.Node{ .identifier = ast.Span{ .start = 99, .end = 121 } } } }, .inner = ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 123, .end = 126 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 129, .end = 132 } } } } } } }, .ret = null, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .equal = ast.BinaryOp{ .lhs = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 238, .end = 242 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 243, .end = 244 } } } }, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 248, .end = 249 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .attributes = null, .scope = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 292, .end = 308 } }, .args = {  } } } }, .next = null } } } } } } } 