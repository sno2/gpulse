ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 26, .end = 47 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 50, .end = 55 } }, .args = { ast.Node{ .number_literal = ast.Span{ .start = 56, .end = 59 } } } } } } } ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 96, .end = 109 }, .typ = null, .value = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 112, .end = 117 } }, .args = { ast.Node{ .number_literal = ast.Span{ .start = 118, .end = 121 } } } } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 123, .end = 128 } } } } } } 