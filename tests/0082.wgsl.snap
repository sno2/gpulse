ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 8 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 85, .end = 86 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 88, .end = 91 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 165, .end = 166 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 168, .end = 171 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 245, .end = 246 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 248, .end = 252 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 253, .end = 256 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 325, .end = 326 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 328, .end = 331 } } } } } } } ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 491, .end = 492 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 570, .end = 571 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 573, .end = 577 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 578, .end = 581 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 730, .end = 731 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 733, .end = 737 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 738, .end = 741 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 811, .end = 812 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 814, .end = 817 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 891, .end = 892 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 894, .end = 897 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1051, .end = 1052 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 1054, .end = 1055 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1132, .end = 1133 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 1135, .end = 1139 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1140, .end = 1143 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1293, .end = 1294 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 1296, .end = 1301 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 1302, .end = 1303 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1305, .end = 1306 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 1374, .end = 1375 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 1377, .end = 1380 } } } } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1540, .end = 1541 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 1552, .end = 1553 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 1579, .end = 1593 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.storage, .typ = ast.Node{ .identifier = ast.Span{ .start = 1595, .end = 1596 } }, .value = null } } } } 