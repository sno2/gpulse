ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 13, .end = 14 }, .access_mode = null, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 16, .end = 19 } }, .value = null } }
ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 34, .end = 35 }, .access_mode = null, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 37, .end = 40 } }, .value = null } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 46, .end = 56 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 57, .end = 58 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 61, .end = 64 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 65, .end = 72 } }, ast.Node{ .identifier = ast.Span{ .start = 74, .end = 77 } } } } } } } }, .ret = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 84, .value = ast.Node{ .identifier = ast.Span{ .start = 85, .end = 86 } } } }, .op_idx = 87, .rhs = ast.Node{ .identifier = ast.Span{ .start = 89, .end = 90 } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 268, .end = 283 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 284, .end = 285 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 288, .end = 291 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 292, .end = 299 } }, ast.Node{ .identifier = ast.Span{ .start = 301, .end = 304 } } } } } } } }, .ret = null, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .paren = ast.Node{ .boolean_literal = ast.BooleanLiteral{ .span = ast.Span{ .start = 315, .end = 320 } } } }, .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .deref = ast.UnaryOp{ .op_idx = 328, .value = ast.Node{ .identifier = ast.Span{ .start = 329, .end = 330 } } } }, .op_idx = 331, .rhs = ast.Node{ .identifier = ast.Span{ .start = 333, .end = 334 } } } } }, .next = null } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 384, .end = 388 }, .params = {  }, .ret = null, .scope = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 630, .end = 640 } }, .args = { ast.Node{ .ref = ast.UnaryOp{ .op_idx = 641, .value = ast.Node{ .identifier = ast.Span{ .start = 642, .end = 643 } } } } } } } } } }
