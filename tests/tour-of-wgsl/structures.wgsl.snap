ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 7, .end = 14 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 19, .end = 29 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 31, .end = 34 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 38, .end = 45 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 47, .end = 50 } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 188, .end = 197 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 200, .end = 207 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 208, .end = 209 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 211, .end = 215 }, .kind = ast.NumberLiteral.NumberKind.abstract_float } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 366, .end = 381 }, .typ = null, .value = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 384, .end = 393 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 394, .end = 404 } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 410, .end = 419 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 420, .end = 421 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 423, .end = 430 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 432, .end = 442 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 444, .end = 447 } } } } }, .ret = ast.Node{ .identifier = ast.Span{ .start = 452, .end = 459 } }, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 468, .end = 474 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = null, .value = ast.Node{ .identifier = ast.Span{ .start = 477, .end = 478 } } } }, ast.Node{ .add_assign = ast.BinaryOp{ .lhs = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 576, .end = 582 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 583, .end = 590 } } } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 594, .end = 604 } } } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .identifier = ast.Span{ .start = 615, .end = 621 } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 632, .end = 649 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 652, .end = 659 } }, .args = {  } } } } }
