ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 10 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 13, .end = 20 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 21, .end = 22 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 24, .end = 25 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 27, .end = 28 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 30, .end = 31 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 33, .end = 34 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 36, .end = 37 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 47, .end = 60 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 63, .end = 70 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 73, .end = 75 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, .op_idx = 76, .rhs = ast.Node{ .identifier = ast.Span{ .start = 78, .end = 82 } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 91, .end = 104 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 107, .end = 114 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 117, .end = 121 } }, .op_idx = 122, .rhs = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 124, .end = 126 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 386, .end = 400 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 403, .end = 408 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 411, .end = 415 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 416, .end = 417 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 419, .end = 420 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 422, .end = 423 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .op_idx = 425, .rhs = ast.Node{ .identifier = ast.Span{ .start = 427, .end = 431 } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 683, .end = 697 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 700, .end = 705 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 708, .end = 712 } }, .op_idx = 713, .rhs = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 715, .end = 719 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 720, .end = 721 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 723, .end = 724 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 734, .end = 750 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 753, .end = 760 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 763, .end = 767 } }, .op_idx = 768, .rhs = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 770, .end = 777 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 778, .end = 779 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 781, .end = 782 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 784, .end = 785 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 787, .end = 789 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 791, .end = 793 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 795, .end = 797 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 799, .end = 801 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 803, .end = 805 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } }
