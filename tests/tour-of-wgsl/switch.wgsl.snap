ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 7 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 10, .end = 11 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 17, .end = 28 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 34, .end = 37 } }, .scope = { ast.Node{ .switch_stmt = ast.Switch{ .expression = ast.Node{ .identifier = ast.Span{ .start = 49, .end = 50 } }, .attributes = null, .clauses = { ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 62, .end = 63 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 80, .end = 81 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 138, .end = 139 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 141, .end = 142 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 159, .end = 160 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 177, .end = 178 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 195, .end = 196 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.SwitchClause{ .default = ast.SwitchClause.Default{ .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 252, .end = 253 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 271, .end = 285 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 291, .end = 294 } }, .scope = { ast.Node{ .switch_stmt = ast.Switch{ .expression = ast.Node{ .paren = ast.Node{ .identifier = ast.Span{ .start = 338, .end = 339 } } }, .attributes = null, .clauses = { ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 352, .end = 353 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 355, .end = 356 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 358, .end = 359 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 376, .end = 377 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 436, .end = 437 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .default_selector = ast.Span{ .start = 439, .end = 446 } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 448, .end = 449 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 466, .end = 467 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } } } } }
