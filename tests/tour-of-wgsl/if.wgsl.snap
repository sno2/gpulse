ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 7 }, .typ = null, .value = ast.Node{ .boolean_literal = ast.BooleanLiteral{ .span = ast.Span{ .start = 10, .end = 14 } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 20, .end = 34 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 40, .end = 43 } }, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .identifier = ast.Span{ .start = 51, .end = 52 } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 91, .end = 92 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .next = null } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 107, .end = 108 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 116, .end = 126 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 132, .end = 135 } }, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .paren = ast.Node{ .not = ast.UnaryOp{ .op_idx = 175, .value = ast.Node{ .identifier = ast.Span{ .start = 176, .end = 177 } } } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 221, .end = 222 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .next = ast.Node{ .else_stmt = ast.CompoundStatement{ .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 246, .end = 247 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 259, .end = 271 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 277, .end = 280 } }, .scope = { ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 288, .end = 292 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 293, .end = 294 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .attributes = null, .scope = { ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 334, .end = 335 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, .next = null } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 350, .end = 351 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
