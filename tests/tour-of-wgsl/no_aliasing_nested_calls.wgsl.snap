ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 37, .end = 39 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 40, .end = 42 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 45, .end = 48 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 49, .end = 57 } }, ast.Node{ .identifier = ast.Span{ .start = 59, .end = 62 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 65, .end = 67 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 70, .end = 73 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 74, .end = 82 } }, ast.Node{ .identifier = ast.Span{ .start = 84, .end = 87 } } } } } } } }, .ret = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .deref = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 95, .end = 97 } } } }, .rhs = ast.Node{ .deref = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 101, .end = 103 } } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 165, .end = 167 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 168, .end = 170 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 173, .end = 176 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 177, .end = 185 } }, ast.Node{ .identifier = ast.Span{ .start = 187, .end = 190 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 193, .end = 195 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 198, .end = 201 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 202, .end = 210 } }, ast.Node{ .identifier = ast.Span{ .start = 212, .end = 215 } } } } } } } }, .ret = null, .scope = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 222, .end = 224 } }, .args = { ast.Node{ .identifier = ast.Span{ .start = 225, .end = 227 } }, ast.Node{ .identifier = ast.Span{ .start = 229, .end = 231 } } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 240, .end = 242 }, .params = {  }, .ret = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 253, .end = 254 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 256, .end = 259 } }, .value = null } }, ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 631, .end = 632 }, .access_mode = ast.AccessMode.read_write, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 634, .end = 637 } }, .value = null } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 641, .end = 643 } }, .args = { ast.Node{ .ref = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 645, .end = 646 } } } }, ast.Node{ .ref = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 649, .end = 650 } } } } } } } } } }
