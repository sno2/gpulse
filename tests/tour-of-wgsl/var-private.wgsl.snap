ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 72, .end = 73 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 76, .end = 79 } }, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 82, .end = 84 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }
ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 159, .end = 160 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 163, .end = 166 } }, .value = null } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 227, .end = 235 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 236, .end = 241 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 244, .end = 247 } } } } }, .ret = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 255, .end = 256 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 259, .end = 264 } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 272, .end = 273 }, .params = {  }, .ret = ast.Node{ .identifier = ast.Span{ .start = 279, .end = 282 } }, .scope = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 325, .end = 333 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 334, .end = 336 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, ast.Node{ .ret = ast.Ret{ .value = ast.Node{ .add = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 369, .end = 370 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 373, .end = 374 } } } } } } } } }
