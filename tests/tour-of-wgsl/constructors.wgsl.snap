ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 15 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 18, .end = 25 } }, .args = {  } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 36, .end = 47 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 50, .end = 57 } }, .args = { ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 58, .end = 63 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 64, .end = 65 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 67, .end = 68 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 71, .end = 76 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 77, .end = 78 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 80, .end = 81 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } }, ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 84, .end = 89 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 90, .end = 91 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 93, .end = 94 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } } } } }
ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 105, .end = 116 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 119, .end = 126 } }, .args = { ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 127, .end = 128 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 130, .end = 131 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 133, .end = 134 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 136, .end = 137 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 139, .end = 140 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } }, ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 142, .end = 143 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
