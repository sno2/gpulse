ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 28, .end = 49 }, .typ = null, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 52, .end = 57 } }, .args = { ast.Node{ .number_literal = ast.Span{ .start = 58, .end = 61 } } } } } } } ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 100, .end = 113 }, .typ = null, .value = ast.Node{ .member = ast.BinaryOp{ .lhs = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 116, .end = 121 } }, .args = { ast.Node{ .number_literal = ast.Span{ .start = 122, .end = 125 } } } } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 127, .end = 132 } } } } } } 