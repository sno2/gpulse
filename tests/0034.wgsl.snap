ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 13, .end = 21 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 23, .end = 26 } }, .value = null } } ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 43, .end = 51 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.workgroup, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 53, .end = 58 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 59, .end = 62 } }, ast.Node{ .number_literal = ast.Span{ .start = 63, .end = 65 } } } } }, .value = null } } ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 76, .end = 82 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 87, .end = 95 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 97, .end = 100 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 104, .end = 109 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 111, .end = 114 } } } } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.Span{ .start = 201, .end = 202 } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.Span{ .start = 213, .end = 214 } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 229, .end = 234 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.uniform, .typ = ast.Node{ .identifier = ast.Span{ .start = 236, .end = 242 } }, .value = null } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.Span{ .start = 320, .end = 321 } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.Span{ .start = 332, .end = 333 } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 359, .end = 363 }, .access_mode = ast.AccessMode.read_write, .addr_space = ast.AddrSpace.storage, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 365, .end = 370 }, .args = { ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 371, .end = 375 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 376, .end = 379 } } } } } } } }, .value = null } } } } ast.Node{ .attributed = ast.Attributed{ .attributes = { ast.Attribute{ .group = ast.Node{ .number_literal = ast.Span{ .start = 446, .end = 447 } } }, ast.Attribute{ .binding = ast.Node{ .number_literal = ast.Span{ .start = 458, .end = 459 } } } }, .inner = ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 465, .end = 478 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 480, .end = 487 } }, .value = null } } } } 