ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 4, .end = 5 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 8, .end = 11 } }, .value = null } } ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 17, .end = 18 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 21, .end = 24 } }, .value = ast.Node{ .call = ast.Call{ .callee = ast.Node{ .identifier = ast.Span{ .start = 27, .end = 40 } }, .args = {  } } } } } ast.Node{ .switch_stmt = ast.Switch{ .expression = ast.Node{ .identifier = ast.Span{ .start = 51, .end = 52 } }, .attributes = null, .clauses = { ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.Span{ .start = 62, .end = 63 } } }, .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 101, .end = 102 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 105, .end = 106 } } } } } } }, ast.SwitchClause{ .default = ast.SwitchClause.Default{ .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 169, .end = 170 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 173, .end = 174 } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.Span{ .start = 187, .end = 188 } }, ast.Node{ .number_literal = ast.Span{ .start = 190, .end = 191 } } }, .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 241, .end = 242 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 245, .end = 246 } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.Span{ .start = 259, .end = 260 } } }, .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 307, .end = 308 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 311, .end = 312 } } } } } } }, ast.SwitchClause{ .case = ast.SwitchClause.Case{ .selectors = { ast.Node{ .number_literal = ast.Span{ .start = 325, .end = 326 } } }, .attributes = null, .scope = { ast.Node{ .assign = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 333, .end = 334 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 337, .end = 338 } } } } } } } } } } 