ast.Node{ .const_decl = ast.ConstDecl{ .name = ast.Span{ .start = 6, .end = 8 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 11, .end = 13 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } }
ast.Node{ .type_alias = ast.TypeAlias{ .name = ast.Span{ .start = 22, .end = 25 }, .value = ast.Node{ .identifier = ast.Span{ .start = 28, .end = 31 } } } }
ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 41, .end = 43 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 47, .end = 50 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 52, .end = 55 } } } } } } }
ast.Node{ .fn_decl = ast.FnDecl{ .name = ast.Span{ .start = 63, .end = 65 }, .params = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 66, .end = 68 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 70, .end = 73 } } } } }, .ret = null, .scope = { ast.Node{ .let_decl = ast.LetDecl{ .name = ast.Span{ .start = 85, .end = 88 }, .typ = null, .value = ast.Node{ .number_literal = ast.NumberLiteral{ .span = ast.Span{ .start = 91, .end = 92 }, .kind = ast.NumberLiteral.NumberKind.abstract_int } } } } } } }
