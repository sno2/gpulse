ast.Node{ .struct_decl = ast.StructDecl{ .name = ast.Span{ .start = 42, .end = 46 }, .members = { ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 51, .end = 52 }, .typ = ast.Node{ .identifier = ast.Span{ .start = 54, .end = 57 } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 61, .end = 62 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 64, .end = 68 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 69, .end = 72 } } } } } } }, ast.Node{ .labeled_type = ast.LabeledType{ .name = ast.Span{ .start = 77, .end = 78 }, .typ = ast.Node{ .template = ast.Template{ .name = ast.Span{ .start = 80, .end = 85 }, .args = { ast.Node{ .identifier = ast.Span{ .start = 86, .end = 89 } }, ast.Node{ .number_literal = ast.Span{ .start = 90, .end = 92 } } } } } } } } } } ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 189, .end = 198 }, .access_mode = ast.AccessMode.read, .addr_space = ast.AddrSpace.private, .typ = ast.Node{ .identifier = ast.Span{ .start = 200, .end = 204 } }, .value = null } } 