ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 4, .end = 5 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 7, .end = 10 } }, .value = null } } ast.Node{ .loop = ast.Loop{ .attributes = null, .scope = { ast.Node{ .var_decl = ast.VarDecl{ .name = ast.Span{ .start = 80, .end = 85 }, .access_mode = ast.AccessMode.read, .addr_space = null, .typ = ast.Node{ .identifier = ast.Span{ .start = 87, .end = 90 } }, .value = ast.Node{ .mul = ast.BinaryOp{ .lhs = ast.Node{ .number_literal = ast.Span{ .start = 93, .end = 94 } }, .rhs = ast.Node{ .identifier = ast.Span{ .start = 97, .end = 98 } } } } } }, ast.Node{ .inc = ast.UnaryOp{ .value = ast.Node{ .identifier = ast.Span{ .start = 136, .end = 137 } } } }, ast.Node{ .if_stmt = ast.If{ .expression = ast.Node{ .equal = ast.BinaryOp{ .lhs = ast.Node{ .identifier = ast.Span{ .start = 146, .end = 147 } }, .rhs = ast.Node{ .number_literal = ast.Span{ .start = 151, .end = 152 } } } }, .attributes = null, .scope = { ast.Node{ .brk = ast.Span{ .start = 155, .end = 160 } } }, .next = null } } } } } 